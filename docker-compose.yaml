services:
  # ------------------ Redis ------------------
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--bind", "0.0.0.0", "--save", "", "--appendonly", "yes"]
    volumes:
      - ./data/redis:/data
    restart: unless-stopped

  # ------------------ InfluxDB ------------------
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: admin123
    volumes:
      - ./data/influxdb:/var/lib/influxdb
      - ./influxdb-init.sh:/docker-entrypoint-initdb.d/init.sh
    restart: unless-stopped

  # ------------------ Grafana ------------------
  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    depends_on:
      - influxdb
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped

  # ------------------ K6 (Load Testing) ------------------
  k6:
    image: grafana/k6:latest
    container_name: k6
    depends_on:
      - influxdb
    volumes:
      - ./scripts:/scripts
    environment:
      K6_OUT: influxdb=http://admin:admin123@influxdb:8086/k6
    restart: "no"

  # ------------------ PostgreSQL ------------------
  db:
    image: postgres:15
    container_name: pg-database-go
    environment:
      POSTGRES_USER: kiw
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: goDb
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kiw -d goDb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - pg-network

  # ------------------ pgAdmin ------------------
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-go
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - pg-network

# ------------------ Networks ------------------
networks:
  pg-network:
    driver: bridge

# ------------------ Volumes ------------------
volumes:
  pgdata:
  grafana_data:
  influxdb_data:
  redis_data:
